{"ast":null,"code":"var _jsxFileName = \"/Users/bodasong/Desktop/blog/frontend/src/components/Navigation/ProtectedRoutes/AdminRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  //check if user login\n  const user = useSelector(state => state === null || state === void 0 ? void 0 : state.users);\n  const {\n    userAuth\n  } = user;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => userAuth !== null && userAuth !== void 0 && userAuth.isAdmin ? /*#__PURE__*/_jsxDEV(Component, { ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 63\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminRoute, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoute;\nexport default AdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","useSelector","Redirect","Route","AdminRoute","component","Component","rest","user","state","users","userAuth","isAdmin"],"sources":["/Users/bodasong/Desktop/blog/frontend/src/components/Navigation/ProtectedRoutes/AdminRoute.js"],"sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Route } from 'react-router-dom'\n\n\nconst AdminRoute = ({component:Component, ...rest}) => {\n    //check if user login\n    const user = useSelector(state=>state?.users);\n    const {userAuth} = user;\n    return (\n        <Route \n            {...rest} \n            render = {() => \n                userAuth?.isAdmin ? <Component {...rest} /> : <Redirect to='/login' />\n            }\n        />\n    );\n};\n\nexport default AdminRoute"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;AAGA,MAAMC,UAAU,GAAG,QAAoC;EAAA;;EAAA,IAAnC;IAACC,SAAS,EAACC,SAAX;IAAsB,GAAGC;EAAzB,CAAmC;EACnD;EACA,MAAMC,IAAI,GAAGP,WAAW,CAACQ,KAAK,IAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEC,KAAf,CAAxB;EACA,MAAM;IAACC;EAAD,IAAaH,IAAnB;EACA,oBACI,QAAC,KAAD,OACQD,IADR;IAEI,MAAM,EAAI,MACNI,QAAQ,SAAR,IAAAA,QAAQ,WAAR,IAAAA,QAAQ,CAAEC,OAAV,gBAAoB,QAAC,SAAD,OAAeL;IAAf;MAAA;MAAA;MAAA;IAAA,QAApB,gBAA8C,QAAC,QAAD;MAAU,EAAE,EAAC;IAAb;MAAA;MAAA;MAAA;IAAA;EAHtD;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CAZD;;GAAMH,U;UAEWH,W;;;KAFXG,U;AAcN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}