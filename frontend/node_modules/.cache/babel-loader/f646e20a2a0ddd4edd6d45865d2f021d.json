{"ast":null,"code":"import { createAsyncThunk, createSlice, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../../../utils/baseURL\"; //action for redirect\n\nconst resetAcc = createAction(\"account/verify-reset\"); //create verification token\n\nexport const accVerificationSendTokenAction = createAsyncThunk(\"account/token\", async (email, _ref) => {\n  var _getState;\n\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref;\n  //get user token\n  const user = (_getState = getState()) === null || _getState === void 0 ? void 0 : _getState.users;\n  const {\n    userAuth\n  } = user;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userAuth === null || userAuth === void 0 ? void 0 : userAuth.token}`\n    }\n  }; //http call\n\n  try {\n    const {\n      data\n    } = await axios.post(`${baseUrl}/api/users/generate-verify-email-token`, {}, config);\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error !== null && error !== void 0 && error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //Verify Account\n\nexport const verifyAccountAction = createAsyncThunk(\"account/verify\", async (token, _ref2) => {\n  var _getState2;\n\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref2;\n  //get user token\n  const user = (_getState2 = getState()) === null || _getState2 === void 0 ? void 0 : _getState2.users;\n  const {\n    userAuth\n  } = user;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userAuth === null || userAuth === void 0 ? void 0 : userAuth.token}`\n    }\n  }; //http call\n\n  try {\n    const {\n      data\n    } = await axios.put(`${baseUrl}/api/users/verify-account`, {\n      token\n    }, config); //dispatch\n\n    dispatch(resetAcc());\n    return data;\n  } catch (error) {\n    var _error$response2;\n\n    if (!(error !== null && error !== void 0 && error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n}); //slices\n\nconst accountVericationSlices = createSlice({\n  name: \"account\",\n  initialState: {},\n  extraReducers: builder => {\n    //create\n    builder.addCase(accVerificationSendTokenAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(accVerificationSendTokenAction.fulfilled, (state, action) => {\n      state.token = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(accVerificationSendTokenAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message;\n    }); //Verify account\n\n    builder.addCase(verifyAccountAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(resetAcc, (state, action) => {\n      state.isVerified = true;\n    });\n    builder.addCase(verifyAccountAction.fulfilled, (state, action) => {\n      state.verified = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n      state.isVerified = false;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(verifyAccountAction.rejected, (state, action) => {\n      var _action$payload2, _action$error2;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error2 = action.error) === null || _action$error2 === void 0 ? void 0 : _action$error2.message;\n    });\n  }\n});\nexport default accountVericationSlices.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","createAction","axios","baseUrl","resetAcc","accVerificationSendTokenAction","email","rejectWithValue","getState","dispatch","user","users","userAuth","config","headers","Authorization","token","data","post","error","response","verifyAccountAction","put","accountVericationSlices","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","payload","appErr","undefined","serverErr","rejected","message","isVerified","verified","reducer"],"sources":["/Users/bodasong/Desktop/blog/frontend/src/redux/slices/accountVerification/accountVerificationSlices.js"],"sourcesContent":["import { createAsyncThunk, createSlice, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport {baseUrl} from \"../../../utils/baseURL\";\n\n//action for redirect\nconst resetAcc = createAction(\"account/verify-reset\");\n\n//create verification token\nexport const accVerificationSendTokenAction = createAsyncThunk(\n  \"account/token\",\n  async (email, { rejectWithValue, getState, dispatch }) => {\n    //get user token\n    const user = getState()?.users;\n    const { userAuth } = user;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userAuth?.token}`,\n      },\n    };\n    //http call\n    try {\n      const { data } = await axios.post(\n        `${baseUrl}/api/users/generate-verify-email-token`,\n        {},\n        config\n      );\n\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//Verify Account\nexport const verifyAccountAction = createAsyncThunk(\n  \"account/verify\",\n  async (token, { rejectWithValue, getState, dispatch }) => {\n    //get user token\n    const user = getState()?.users;\n    const { userAuth } = user;\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userAuth?.token}`,\n      },\n    };\n    //http call\n    try {\n      const { data } = await axios.put(\n        `${baseUrl}/api/users/verify-account`,\n        { token },\n        config\n      );\n      //dispatch\n      dispatch(resetAcc());\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slices\n\nconst accountVericationSlices = createSlice({\n  name: \"account\",\n  initialState: {},\n  extraReducers: builder => {\n    //create\n    builder.addCase(accVerificationSendTokenAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(\n      accVerificationSendTokenAction.fulfilled,\n      (state, action) => {\n        state.token = action?.payload;\n        state.loading = false;\n        state.appErr = undefined;\n        state.serverErr = undefined;\n      }\n    );\n    builder.addCase(\n      accVerificationSendTokenAction.rejected,\n      (state, action) => {\n        state.loading = false;\n        state.appErr = action?.payload?.message;\n        state.serverErr = action?.error?.message;\n      }\n    );\n\n    //Verify account\n    builder.addCase(verifyAccountAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(resetAcc, (state, action) => {\n      state.isVerified = true;\n    });\n    builder.addCase(verifyAccountAction.fulfilled, (state, action) => {\n      state.verified = action?.payload;\n      state.loading = false;\n      state.isVerified = false;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(verifyAccountAction.rejected, (state, action) => {\n      state.loading = false;\n      state.appErr = action?.payload?.message;\n      state.serverErr = action?.error?.message;\n    });\n  },\n});\n\nexport default accountVericationSlices.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}