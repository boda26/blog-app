{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { baseUrl } from '../../../utils/baseURL'; //create post action\n\nexport const createPostAction = createAsyncThunk('post/created', async (post, _ref) => {\n  var _getState;\n\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref;\n  const user = (_getState = getState()) === null || _getState === void 0 ? void 0 : _getState.users;\n  const {\n    userAuth\n  } = user;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userAuth === null || userAuth === void 0 ? void 0 : userAuth.token}`\n    }\n  };\n\n  try {\n    const {\n      data\n    } = await axios.post(`${baseUrl}/api/posts`, post, config);\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error !== null && error !== void 0 && error.response)) throw error;\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //slice\n\nconst postSlice = createSlice({\n  name: 'post',\n  initialState: {\n    post: 20\n  },\n  extraReducers: builder => {\n    builder.addCase(createPostAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(createPostAction.fulfilled, (state, action) => {\n      state.postCreated = action === null || action === void 0 ? void 0 : action.payload;\n      state.loading = false;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(createPostAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message;\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","baseUrl","createPostAction","post","rejectWithValue","getState","dispatch","user","users","userAuth","config","headers","Authorization","token","data","error","response","postSlice","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","postCreated","payload","appErr","undefined","serverErr","rejected","message","reducer"],"sources":["/Users/bodasong/Desktop/blog/blog-frontend/src/redux/slices/posts/postSlices.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport axios from 'axios';\nimport { baseUrl } from '../../../utils/baseURL';\n\n//create post action\nexport const createPostAction = createAsyncThunk('post/created', \nasync (post ,{rejectWithValue, getState, dispatch }) => {\n    const user = getState()?.users;\n    const {userAuth} = user;\n    const config = {\n        headers: {\n            Authorization: `Bearer ${userAuth?.token}`,\n        },\n    };\n    try {\n        const {data} = await axios.post(`${baseUrl}/api/posts`, post, config);\n        return data;\n    } catch (error) {\n        if (!error?.response) throw error;\n        return rejectWithValue(error?.response?.data);\n    }\n});\n\n//slice\nconst postSlice = createSlice({\n    name: 'post',\n    initialState: {post: 20},\n    extraReducers: (builder) => {\n        builder.addCase(createPostAction.pending, (state, action) => {\n            state.loading = true;\n        });\n        builder.addCase(createPostAction.fulfilled, (state, action) => {\n            state.postCreated = action?.payload;\n            state.loading = false;\n            state.appErr = undefined;\n            state.serverErr = undefined;\n        });\n        builder.addCase(createPostAction.rejected, (state, action) => {\n            state.loading = false;\n            state.appErr = action?.payload?.message;\n            state.serverErr = action?.error?.message;\n        });\n    }\n});\n\nexport default postSlice.reducer;"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,wBAAxB,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAGJ,gBAAgB,CAAC,cAAD,EAChD,OAAOK,IAAP,WAAwD;EAAA;;EAAA,IAA3C;IAACC,eAAD;IAAkBC,QAAlB;IAA4BC;EAA5B,CAA2C;EACpD,MAAMC,IAAI,gBAAGF,QAAQ,EAAX,8CAAG,UAAYG,KAAzB;EACA,MAAM;IAACC;EAAD,IAAaF,IAAnB;EACA,MAAMG,MAAM,GAAG;IACXC,OAAO,EAAE;MACLC,aAAa,EAAG,UAASH,QAAV,aAAUA,QAAV,uBAAUA,QAAQ,CAAEI,KAAM;IADpC;EADE,CAAf;;EAKA,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMd,KAAK,CAACG,IAAN,CAAY,GAAEF,OAAQ,YAAtB,EAAmCE,IAAnC,EAAyCO,MAAzC,CAArB;IACA,OAAOI,IAAP;EACH,CAHD,CAGE,OAAOC,KAAP,EAAc;IAAA;;IACZ,IAAI,EAACA,KAAD,aAACA,KAAD,eAACA,KAAK,CAAEC,QAAR,CAAJ,EAAsB,MAAMD,KAAN;IACtB,OAAOX,eAAe,CAACW,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEC,QAAR,oDAAC,gBAAiBF,IAAlB,CAAtB;EACH;AACJ,CAhB+C,CAAzC,C,CAkBP;;AACA,MAAMG,SAAS,GAAGlB,WAAW,CAAC;EAC1BmB,IAAI,EAAE,MADoB;EAE1BC,YAAY,EAAE;IAAChB,IAAI,EAAE;EAAP,CAFY;EAG1BiB,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CAACC,OAAR,CAAgBpB,gBAAgB,CAACqB,OAAjC,EAA0C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzDD,KAAK,CAACE,OAAN,GAAgB,IAAhB;IACH,CAFD;IAGAL,OAAO,CAACC,OAAR,CAAgBpB,gBAAgB,CAACyB,SAAjC,EAA4C,CAACH,KAAD,EAAQC,MAAR,KAAmB;MAC3DD,KAAK,CAACI,WAAN,GAAoBH,MAApB,aAAoBA,MAApB,uBAAoBA,MAAM,CAAEI,OAA5B;MACAL,KAAK,CAACE,OAAN,GAAgB,KAAhB;MACAF,KAAK,CAACM,MAAN,GAAeC,SAAf;MACAP,KAAK,CAACQ,SAAN,GAAkBD,SAAlB;IACH,CALD;IAMAV,OAAO,CAACC,OAAR,CAAgBpB,gBAAgB,CAAC+B,QAAjC,EAA2C,CAACT,KAAD,EAAQC,MAAR,KAAmB;MAAA;;MAC1DD,KAAK,CAACE,OAAN,GAAgB,KAAhB;MACAF,KAAK,CAACM,MAAN,GAAeL,MAAf,aAAeA,MAAf,0CAAeA,MAAM,CAAEI,OAAvB,oDAAe,gBAAiBK,OAAhC;MACAV,KAAK,CAACQ,SAAN,GAAkBP,MAAlB,aAAkBA,MAAlB,wCAAkBA,MAAM,CAAEV,KAA1B,kDAAkB,cAAemB,OAAjC;IACH,CAJD;EAKH;AAlByB,CAAD,CAA7B;AAqBA,eAAejB,SAAS,CAACkB,OAAzB"},"metadata":{},"sourceType":"module"}